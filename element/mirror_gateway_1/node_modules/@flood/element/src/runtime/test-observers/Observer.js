"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class NoOpTestObserver {
    constructor(next) {
        this.next = next;
    }
    async before(test) {
        return this.next.before(test);
    }
    async after(test) {
        return this.next.after(test);
    }
    async beforeStep(test, step) {
        return this.next.beforeStep(test, step);
    }
    async onStepPassed(test, step) {
        return this.next.onStepPassed(test, step);
    }
    async onStepError(test, step, error) {
        return this.next.onStepError(test, step, error);
    }
    async onStepSkipped(test, step) {
        return this.next.onStepSkipped(test, step);
    }
    async afterStep(test, step) {
        return this.next.afterStep(test, step);
    }
    async beforeStepAction(test, step, command) {
        return this.next.beforeStepAction(test, step, command);
    }
    async afterStepAction(test, step, command) {
        return this.next.afterStepAction(test, step, command);
    }
}
exports.NoOpTestObserver = NoOpTestObserver;
class NullTestObserver {
    async before(test) {
        return;
    }
    async after(test) {
        return;
    }
    async beforeStep(test, step) {
        return;
    }
    async onStepPassed(test, step) {
        return;
    }
    async onStepError(test, step, error) {
        return;
    }
    async onStepSkipped(test, step) {
        return;
    }
    async afterStep(test, step) {
        return;
    }
    async beforeStepAction(test, step, command) {
        return;
    }
    async afterStepAction(test, step, command) {
        return;
    }
}
exports.NullTestObserver = NullTestObserver;

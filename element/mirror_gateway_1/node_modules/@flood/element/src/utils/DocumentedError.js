"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class DocumentedError extends Error {
    constructor(message, doc, callContext, originalError) {
        super(message);
        this._documented = 'yes';
        this.errorDoc = doc;
        this.callContext = callContext;
        this.originalError = originalError;
        Error.captureStackTrace(this, this.constructor);
    }
    static documented(err, message, doc, callContext) {
        if (callContext === undefined && err.callContext !== undefined) {
            callContext = err.callContext;
        }
        return new DocumentedError(message, doc, callContext, err).copyStackFromOriginalError();
    }
    copyStackFromOriginalError() {
        if (this.originalError) {
            this.stack = this.originalError.stack;
        }
        return this;
    }
    static liftAddingCallContext(err, callCtx) {
        if (err._documented === 'yes') {
            ;
            err.callContext = callCtx;
            return err;
        }
        else {
            return DocumentedError.wrapUnhandledError(err, err.message, callCtx);
        }
    }
    static wrapUnhandledError(err, message, callContext) {
        return new DocumentedError(message || err.message, 'Documentation needed! Please report this at https://github.com/flood-io/element/issues so that we can improve Element!', callContext, err);
    }
}
exports.DocumentedError = DocumentedError;

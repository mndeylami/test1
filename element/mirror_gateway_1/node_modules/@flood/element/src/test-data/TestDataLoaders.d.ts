import { TestDataFactory, TestDataSource } from './TestData';
import { WorkRoot } from '../runtime-environment/types';
export declare class TestDataLoaders implements TestDataFactory {
    private workRoot;
    constructor(workRoot: WorkRoot);
    /**
     * Loads a standard Javascript array of data objects
     */
    fromData<TRow>(lines: TRow[]): TestDataSource<TRow>;
    /**
     * Loads test data from a CSV file, returning a `<[TestDataSource]>` instance.
     */
    fromCSV<TRow>(filename: string, separator?: string): TestDataSource<TRow>;
    /**
     * Loads data from a JSON ffile
     */
    fromJSON<TRow>(filename: string): TestDataSource<TRow>;
}
export declare class NullTestDataLoaders implements TestDataFactory {
    fromData<TRow>(lines: TRow[]): TestDataSource<TRow>;
    fromCSV<TRow>(filename: string, separator?: string): TestDataSource<TRow>;
    fromJSON<TRow>(filename: string): TestDataSource<TRow>;
}
interface hasATestData {
    testData: TestDataSource<any>;
}
export declare class BoundTestDataLoaders implements TestDataFactory {
    private target;
    private innerLoaders;
    constructor(target: hasATestData, workRoot: WorkRoot);
    fromData<TRow>(lines: TRow[]): TestDataSource<TRow>;
    fromCSV<TRow>(filename: string, separator?: string): TestDataSource<TRow>;
    fromJSON<TRow>(filename: string): TestDataSource<TRow>;
}
export {};

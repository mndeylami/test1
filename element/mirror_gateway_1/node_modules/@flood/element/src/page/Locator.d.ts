import { EvaluateFn, ExecutionContext, ElementHandle as PElementHandle, Frame } from 'puppeteer';
import { ElementHandle } from './ElementHandle';
import { Locator } from './types';
export declare class NotImplementedError extends Error {
    message: string;
    constructor(message?: string);
}
export declare class BaseLocator implements Locator {
    protected errorString: string;
    pageFunc: EvaluateFn;
    pageFuncMany: EvaluateFn;
    pageFuncArgs: any[];
    constructor(errorString: string);
    toErrorString(): string;
    find(context: ExecutionContext, node?: PElementHandle): Promise<ElementHandle | null>;
    findMany(context: ExecutionContext, node?: PElementHandle): Promise<ElementHandle[]>;
    wait(frame: Frame, waitFunc: EvaluateFn, waitFuncArgs: any[], options?: any): Promise<boolean>;
}

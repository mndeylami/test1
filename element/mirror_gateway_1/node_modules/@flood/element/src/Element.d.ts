/// <reference types="node" />
import { Logger } from 'winston';
import { IReporter } from './Reporter';
import { PuppeteerClient } from './driver/Puppeteer';
import { RuntimeEnvironment } from './runtime-environment/types';
import { TestCommander } from './Runner';
import { TestSettings, ChromeVersion } from './runtime/Settings';
import { TestObserver } from './runtime/test-observers/Observer';
import { AsyncFactory } from './utils/Factory';
export interface ElementOptions {
    logger: Logger;
    runEnv: RuntimeEnvironment;
    reporter: IReporter;
    clientFactory?: AsyncFactory<PuppeteerClient>;
    testScript: string;
    strictCompilation: boolean;
    headless: boolean;
    devtools: boolean;
    chromeVersion: ChromeVersion | string | undefined;
    sandbox: boolean;
    process?: NodeJS.Process;
    verbose: boolean;
    testSettingOverrides: TestSettings;
    testObserverFactory?: (t: TestObserver) => TestObserver;
    persistentRunner: boolean;
    testCommander?: TestCommander;
}
export declare function runUntilExit(fn: () => Promise<void>): void;
export declare function runCommandLine(opts: ElementOptions): Promise<void>;

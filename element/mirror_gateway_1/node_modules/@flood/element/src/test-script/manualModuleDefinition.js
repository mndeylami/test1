"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const fs_1 = require("fs");
// TODO try to use typescript's resolution support
function manualModuleDefinition(name) {
    const modulePath = (require.resolve.paths(name) || []).map(p => path_1.resolve(p, name)).find(fs_1.existsSync);
    if (modulePath === undefined) {
        throw new Error(`unable to find ${name}`);
    }
    const resolvedFileName = path_1.join(modulePath, 'index.d.ts');
    return {
        resolvedFileName,
        isExternalLibraryImport: true,
    };
}
exports.manualModuleDefinition = manualModuleDefinition;
function readPackage(root) {
    return JSON.parse(fs_1.readFileSync(path_1.join(root, 'package.json'), 'utf8'));
}
function manualModuleResolution(name) {
    const { resolvedFileName } = manualModuleDefinition(name);
    const { version } = readPackage(path_1.dirname(resolvedFileName));
    return {
        primary: true,
        resolvedFileName,
        packageId: {
            name,
            subModuleName: path_1.basename(resolvedFileName),
            version,
        },
    };
}
exports.manualModuleResolution = manualModuleResolution;
